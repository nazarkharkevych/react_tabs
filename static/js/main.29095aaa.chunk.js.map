{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","_ref","tabs","selectedTabId","onTabSelected","selectedTab","find","_ref2","id","_jsxs","_Fragment","children","className","title","_jsx","map","tab","classNames","href","concat","onClick","content","App","_useState","useState","_useState2","_slicedToArray","setSelectedTabId","ReactDOM","render","document","getElementById"],"mappings":"kNAeaA,EAAwB,SAAHC,GAI3B,IAHLC,EAAID,EAAJC,KACAC,EAAaF,EAAbE,cACAC,EAAaH,EAAbG,cAEMC,EAAcH,EAAKI,MAAK,SAAAC,GAAK,OAAAA,EAAFC,KAAgBL,MAAkBD,EAAK,GAExE,OACEO,eAAAC,WAAA,CAAAC,SAAA,CACEF,eAAA,MAAIG,UAAU,QAAOD,SAAA,CAClB,mBACAN,EAAYQ,SAGfJ,eAAA,OAAK,UAAQ,gBAAeE,SAAA,CAC1BG,cAAA,OAAKF,UAAU,gBAAeD,SAC5BG,cAAA,MAAAH,SACGT,EAAKa,KAAI,SAACC,GAAG,OACZF,cAAA,MAEE,UAAQ,MACRF,UAAWK,IACT,CAAE,YAAaD,EAAIR,KAAOH,EAAYG,KACtCG,SAEFG,cAAA,KACEI,KAAI,IAAAC,OAAMH,EAAIR,IACd,UAAQ,UACRY,QAAS,WACHJ,EAAIR,KAAOL,GAIfC,EAAcY,IACdL,SAEDK,EAAIH,SAjBFG,EAAIR,WAwBjBM,cAAA,OAAKF,UAAU,QAAQ,UAAQ,aAAYD,SACxCN,EAAYgB,iBCrDVnB,EAAO,CAClB,CAAEM,GAAI,QAASK,MAAO,QAASQ,QAAS,eACxC,CAAEb,GAAI,QAASK,MAAO,QAASQ,QAAS,eACxC,CAAEb,GAAI,QAASK,MAAO,QAASQ,QAAS,gBAG7BC,EAAgB,WAC3B,IAAAC,EAA0CC,mBAAS,SAAQC,EAAAC,YAAAH,EAAA,GAApDpB,EAAasB,EAAA,GAAEE,EAAgBF,EAAA,GAEtC,OACEX,cAAA,OAAKF,UAAU,UAASD,SACtBG,cAACd,EAAI,CACHE,KAAMA,EACNC,cAAeA,EACfC,cAAe,SAACY,GAAG,OAAKW,EAAiBX,EAAIR,UCjBrDoB,IAASC,OAAOf,cAACQ,EAAG,IAAKQ,SAASC,eAAe,W","file":"static/js/main.29095aaa.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\n\ninterface Tab {\n  id: string;\n  title: string;\n  content: string;\n}\n\ntype Props = {\n  tabs: Tab[];\n  selectedTabId: string;\n  onTabSelected: (tab: Tab) => void;\n};\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  const selectedTab = tabs.find(({ id }) => id === selectedTabId) || tabs[0];\n\n  return (\n    <>\n      <h1 className=\"title\">\n        {'Selected tab is '}\n        {selectedTab.title}\n      </h1>\n\n      <div data-cy=\"TabsComponent\">\n        <div className=\"tabs is-boxed\">\n          <ul>\n            {tabs.map((tab) => (\n              <li\n                key={tab.id}\n                data-cy=\"Tab\"\n                className={classNames(\n                  { 'is-active': tab.id === selectedTab.id },\n                )}\n              >\n                <a\n                  href={`#${tab.id}`}\n                  data-cy=\"TabLink\"\n                  onClick={() => {\n                    if (tab.id === selectedTabId) {\n                      return;\n                    }\n\n                    onTabSelected(tab);\n                  }}\n                >\n                  {tab.title}\n                </a>\n              </li>\n            ))}\n          </ul>\n        </div>\n\n        <div className=\"block\" data-cy=\"TabContent\">\n          {selectedTab.content}\n        </div>\n      </div>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState('tab-1');\n\n  return (\n    <div className=\"section\">\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={(tab) => setSelectedTabId(tab.id)}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}